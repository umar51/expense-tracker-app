

1. In AddTransaction components, the input values are being saved in useState state.

2. Used onChange attribute on input tag to update the value of text whenever its typed in.
syntax of onChange: 
<input value={text} onChange={(e) => setText(e.target.value)}

here text,settext are useState and e is the event of typing.
e.target.value is saving the typed text into text

3. IN complex apps there can be more than 1 global context files as needed like in shopping app, shoping context and profile context etc.

4. .reduce() method is used to apply maths operations on array elements from left to right.
 example:
arr1 = [1,4,3,6,8];

sum = arr1.reduce((total,num)=>(total + num = total), 0);

here reduce is passed a fuction and 0 value as argument.
a. function does the math operation written in it where each element of array is num and total is the sum of consective elements/num.
  function repeats its steps for each element thus adding the previous total with the next element/num from left to right in that array
b. whereas 2nd argument is initial value of total ie 0


5. React components has a built-in state object.

	The state object is where you store property values that belongs to the component.

	When the state object changes, the component re-renders.

6. ...state is spread operator to access the global initialState anywhere in the components after global context has been made.

const initialState = {
    transactions: [
        { id: 1, text: 'Flower', amount: -20 }, //expense is negative number
        { id: 2, text: 'Salary', amount: 300 }, //salary is positive number
        { id: 3, text: 'Book', amount: -10 },
        { id: 4, text: 'Camera', amount: 150 }
    ]
}
export const GlobalContext = createContext(initialState);


Now we can access initial state's transactions in any component by writing:

...state,  //calling the initialState

 transactions: state.transactions.filter(transaction => transaction.id !== action.payload ) //accessing the transations


7. e/ event:
	The e is short for event

	The simplest way to create an event is to click somewhere on the page.

	When you click, a click event is triggered. This event is actually an object containing information about the action that just   happened. In this example's case, the event would have info such as the coordinates of the click (event.screenX for example), the element on which you clicked (event.target), and much more

Read more here : 
https://stackoverflow.com/questions/35936365/what-exactly-is-the-parameter-e-event-and-why-pass-it-to-javascript-functions

8. e.preventDefault():
The preventDefault() method cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur.

9. e.target.value
e is the event, which in this case is change, target is the element that triggered the event, which in this case is the input, and value is the value of the input element â€“

10. hooks are useful for larger applications.

complete
https://www.youtube.com/watch?v=XuFDcZABiDQ

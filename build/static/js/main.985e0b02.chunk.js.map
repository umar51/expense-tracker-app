{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","firebase.js","swDev.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","swUrl","process","navigator","serviceWorker","register","then","response","console","log","swDev","App","msg","messaging","requestPermission","getToken","token","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.985e0b02.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker App\n            \n        </h2>\n    )\n}\n","\n\nconst AppReducer= (state, action) => {\n    switch(action.type) {\n        case 'DELETE_TRANSACTION':\n            return{\n                ...state,                     //global state initialState has object of transactions\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload ) //filter method is used over transactions object where it maps over object and passes only those transaction whose id is not equal to the id passed in payload.\n            }\n        case 'ADD_TRANSACTION':\n            return{\n                ...state,  //accessing the initialState\n                transactions: [action.payload, ...state.transactions] //making array of current transactions and new transaction coming as payload \n            }\n        default:\n            return state; //as default it returns the state as is it\n    }\n}\n\nexport default AppReducer;","import React, { createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer.js'\n\n//inintial state object\n\nconst initialState = {\n    transactions: [\n        //used dummy transactions for building reference\n        // { id: 1, text: 'Flower', amount: -20 }, //expense is negative number\n        // { id: 2, text: 'Salary', amount: 300 }, //salary is positive number\n        // { id: 3, text: 'Book', amount: -10 },\n        // { id: 4, text: 'Camera', amount: 150 } \n    ]\n}\n\n//Create context\n\nexport const GlobalContext = createContext(initialState);\n\n//Provider of Global context\n\nexport const GlobalProvider = ({children}) => {  //passing children destructuring as provider will be wrapped on other components\n    const [state, dispatch] = useReducer(AppReducer, initialState); //for actions\n\n//Actions\n    function deleteTransaction(id) {\n        dispatch({   //passing the object of elements type and payload to dispatch method, elements of dispatch are actions defined in Reducer\n            type: 'DELETE_TRANSACTION', //type of action\n            payload: id    //id of transaction on which action will effect \n        });\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n    return (<GlobalContext.Provider value={{ //value prop is passed down the provider which has transaction object as value\n        transactions: state.transactions, //state.transactions will give access to all elements of transaction object \n        deleteTransaction,\n        addTransaction\n\n    }}>\n        {children}\n    </GlobalContext.Provider>)\n}","import React, {useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const Balance = () => {\n    const {transactions} = useContext(GlobalContext); //geting the global object transactions from Global Context\n    const amounts = transactions.map(transaction => transaction.amount); //saving each transaction into amount object by mapping on transactions\n    const total = amounts.reduce((acc, item)=> (acc += item), 0).toFixed(2); //tofixed gives numeric values upto 2 places\n                                                                          //.reduce() method is used to apply maths operations defined in its function on array elements from left to right.\n                                                                          //here reduce is passed a fuction and 0 value as argument.\n                                                                            //a. function does the math operation written in it where each element of array is item and acc is the sum of consective elements/item.\n                                                                            //function repeats its steps for each element thus adding the previous acc with the next element/item from left to right in that array\n                                                                            //b. whereas 2nd argument is initial value of acc ie 0\n    \n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1>${total}</h1>\n            \n        </>\n    )\n}\n","import React, {useContext} from 'react';\n\nimport { GlobalContext} from '../context/GlobalState';\n\nexport const IncomeExpenses = () => {\n\n    const {transactions} = useContext(GlobalContext);\n    const amounts = transactions.map(transaction => transaction.amount); //geting array of amount of each item in transactions by mapping on them \n    \n    const income = amounts\n    .filter(item => item > 0)//filter metod on array, it selects on those amounts than are greater than 0\n    .reduce((acc, item) => (acc += item), 0) //reduce method adds up all filtered amounts\n    .toFixed(2); //making the totla upto two decimal places\n\n    const expense = (\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n        -1     //similarly filters negative values, adds them and puts -ve sign by multiplying -1\n    ).toFixed(2);\n\n        return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">+${income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p className=\"money minus\">-${expense}</p>\n            </div>\n      </div>\n    )\n}\n","import React, {useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const Transaction = ({transaction}) => { //here either we can use (prop) to recieve the prop from TransactionList , here we used destructuring anotation {transaction}\n    const sign = transaction.amount < 0 ? \"-\" : \"+\"; //to have sign for expense and salary separately\n    //to have green border for salary and red for expenses, we have css for class named \"minus\" and \"plus\" \n    \n    const {deleteTransaction} = useContext(GlobalContext);\n    return (\n            <div>\n                <li className={transaction.amount < 0 ? \"minus\": \"plus\"}>\n                        {transaction.text} \n                        <span>{sign}${Math.abs(transaction.amount)}</span>\n                        <button className=\"delete-btn\" onClick={() => deleteTransaction(transaction.id)}>x</button>\n                </li> \n            </div>\n        )\n    }\n","import React, {useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { Transaction } from './Transaction';\n\n\nexport const TransactionList = () => {\n    const { transactions} = useContext(GlobalContext); //using global context in transaction list \n    return (\n        //transactions is object and .map() method willl aply whatever passed in map() to each element/transaction of object\n        //here we are rendering each transaction array in other separate component of transaction, it needs to pass transaction as prop to this component and since their is list of transactions so key prop is also needed to be passed with each have id.\n        <>\n            <h3>History</h3>\n            <ul className=\"list\">\n            \n              {transactions.map(transaction => ( <Transaction key={transaction.id}  transaction={transaction}/> ))}\n\n            </ul>\n            \n        </>\n    )\n}\n","import React, {useState, useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n\n    const [text, setText] = useState(\" \");\n    const [amount, setAmount] = useState(0);\n\n    const {addTransaction} = useContext(GlobalContext);\n\n\n    const onSubmit = e => {\n        e.preventDefault(); //stops the form submission event \n\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000), //assigning the random id to new transaction\n            text,   //text and amount have the new input values because of setText and setAmount\n            amount: +amount   //added + sign to convert it into numeric, other wise it is passed as string and gives error when other math operations are applied to it\n        }\n        addTransaction(newTransaction);\n    }\n\n\n    // e.target.value : e is the event, which in this case is change, target is the element that triggered the event, which in this case is the input, and value is the value of the input element \n    return (\n        <>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit} >\n                <div className=\"form-control\">\n                <label htmlFor=\"text\">Text</label>\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                <label htmlFor=\"amount\"\n                    >Amount <br />\n                    (negative - expense, positive - income)</label\n                >\n                <input type=\"number\" value={amount} onChange={(e)=> setAmount(e.target.value)}  placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\" >Add transaction</button>\n            </form>\n            \n        </>\n    )\n}\n","import firebase from 'firebase';\n\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyCTgsrcW9hTs76q7KIYayG9cotmc8uip7A\",\n    authDomain: \"expense-tracker-app-8826d.firebaseapp.com\",\n    projectId: \"expense-tracker-app-8826d\",\n    storageBucket: \"expense-tracker-app-8826d.appspot.com\",\n    messagingSenderId: \"1036210608950\",\n    appId: \"1:1036210608950:web:e2f59204536081265b7197\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;\n","\n\n\n//const webpush = require('web-push');\nexport const swDev = () => {\n  \n\n    // //generating decoded app server key \n    // function determineAppServerKey() {\n    //         var vapidKey = webpush.generateVAPIDKeys();\n    //         var vapidPublicKey = vapidKey.publicKey;\n            \n            \n          \n    //         return urlBase64ToUint8Array(vapidPublicKey)\n    //     }\n       \n    \n\n    // //push message decoding and encoding\n    // function urlBase64ToUint8Array(base64String) {\n    //         const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    //         const base64 = (base64String + padding)\n    //         .replace(/-/g, '+')\n    //         .replace(/_/g, '/');\n        \n    //         const rawData = window.atob(base64);\n    //         const outputArray = new Uint8Array(rawData.length);\n        \n    //         for (let i = 0; i < rawData.length; ++i) {\n    //         outputArray[i] = rawData.charCodeAt(i);\n    //         }\n    //         return outputArray;\n    //    }\n\n\n\n\n\n    let swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n    navigator.serviceWorker.register(swUrl).then((response)=> {\n        console.log(\"sw registered\")\n\n        // //subcribed for enabling push messaging\n        // return response.pushManager.subscribe({\n        //     userVisibleOnly: true,\n        //     applicationServerKey: determineAppServerKey()\n        // })\n    \n    })\n}\n","import {Header} from \"./components/Header\";\nimport {Balance} from \"./components/Balance\";\nimport {IncomeExpenses} from \"./components/IncomeExpenses\"; \nimport './App.css';\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport { swDev } from \"./swDev\";\nimport firebase from './firebase.js';\n\nfunction App() {\n  const msg = firebase.messaging();\n  msg.requestPermission().then(()=> {\n    return msg.getToken();\n  }).then(token => {\n    console.log('token', token)\n  })\n\n  return (\n    <div>\n      <GlobalProvider>\n        <Header/>\n        \n        <div className=\"container\">\n          <Balance/>\n          <IncomeExpenses/>\n          <TransactionList/>\n          <AddTransaction/>\n        </div>\n      </GlobalProvider>\n\n\n    </div>\n  \n  );\n}\n\nswDev();\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
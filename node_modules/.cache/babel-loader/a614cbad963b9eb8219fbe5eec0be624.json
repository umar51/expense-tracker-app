{"ast":null,"code":"var _jsxFileName = \"/home/umar/To be backuped/bootcampwithmamoon/bootcamp/expense-tracker-app/src/components/Balance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Balance = () => {\n  _s();\n\n  const {\n    transactions\n  } = useContext(GlobalContext); //geting the global object transactions from Global Context\n\n  const amounts = transactions.map(transaction => transaction.amount); //saving each transaction into amount object by mapping on transactions\n\n  const total = amounts.reduce((acc, item) => acc += item, 0).toFixed(2); //tofixed gives numeric values upto 2 places\n  //.reduce() method is used to apply maths operations defined in its function on array elements from left to right.\n  //here reduce is passed a fuction and 0 value as argument.\n  //a. function does the math operation written in it where each element of array is item and acc is the sum of consective elements/item.\n  //function repeats its steps for each element thus adding the previous acc with the next element/item from left to right in that array\n  //b. whereas 2nd argument is initial value of acc ie 0\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Balance, \"A6iGkhYpgttKQ3XBwH6If3ta7Ms=\");\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/home/umar/To be backuped/bootcampwithmamoon/bootcamp/expense-tracker-app/src/components/Balance.js"],"names":["React","useContext","GlobalContext","Balance","transactions","amounts","map","transaction","amount","total","reduce","acc","item","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM;AAACC,IAAAA;AAAD,MAAiBH,UAAU,CAACC,aAAD,CAAjC,CADyB,CACyB;;AAClD,QAAMG,OAAO,GAAGD,YAAY,CAACE,GAAb,CAAiBC,WAAW,IAAIA,WAAW,CAACC,MAA5C,CAAhB,CAFyB,CAE4C;;AACrE,QAAMC,KAAK,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,IAAIC,IAArC,EAA4C,CAA5C,EAA+CC,OAA/C,CAAuD,CAAvD,CAAd,CAHyB,CAGgD;AACH;AACA;AACE;AACA;AACA;;AAExE,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAMJ,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH,CAjBM;;GAAMN,O;;KAAAA,O","sourcesContent":["import React, {useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const Balance = () => {\n    const {transactions} = useContext(GlobalContext); //geting the global object transactions from Global Context\n    const amounts = transactions.map(transaction => transaction.amount); //saving each transaction into amount object by mapping on transactions\n    const total = amounts.reduce((acc, item)=> (acc += item), 0).toFixed(2); //tofixed gives numeric values upto 2 places\n                                                                          //.reduce() method is used to apply maths operations defined in its function on array elements from left to right.\n                                                                          //here reduce is passed a fuction and 0 value as argument.\n                                                                            //a. function does the math operation written in it where each element of array is item and acc is the sum of consective elements/item.\n                                                                            //function repeats its steps for each element thus adding the previous acc with the next element/item from left to right in that array\n                                                                            //b. whereas 2nd argument is initial value of acc ie 0\n    \n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1>${total}</h1>\n            \n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}